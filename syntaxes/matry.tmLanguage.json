{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "Matry",
  "scopeName": "source.matry",
  "fileTypes": ["matry"],
  "patterns": [
    {
      "name": "comment.line.double-slash",
      "match": "//.*"
    },
    {
      "name": "comment.block",
      "begin": "/\\*",
      "end": "\\*/"
    },
    {
      "include": "#story_block"
    },
    {
      "include": "#tokens_block"
    }
  ],
  "repository": {

    "tokens_block": {
      "patterns": [
        {
          "name": "keyword",
          "begin": "^tokens\\b",
          "end": "}",
          "patterns": [
            {
              "name": "entity.other.attribute-name",
              "match": "([a-z|A-Z|0-9]+)(?=\\s*{)"
            },
            {
              "name": "invalid",
              "match": "howdy"
            },
            {
              "include": "#token_properties"
            },
            {
              "begin": "\\b([a-z|A-Z|0-9]+)(?=\\s*{)",
              "end": "}",
              "patterns": [
                {
                  "include": "#token_properties"
                }
              ]
            }
          ]
        }
      ]
    },
    "token_properties": {
      "patterns": [
        {
          "name": "punctuation",
          "match": ":"
        },
        {
          "name": "support.type",
          "match": "\\b(color|text|asset|dimension|toggle)\\b"
        },
        {
          "name": "variable.parameter",
          "match": "\\b[a-zA-Z][a-zA-Z0-9_-]*[a-zA-Z0-9](?=\\s*:)"
        },
        {
          "include": "#style_values"
        }
      ]
    },

    "story_block": {
      "patterns": [
        {
          "name": "keyword",
          "begin": "^story\\b",
          "end": "}",
          "patterns": [
            {
              "name": "entity.other.attribute-name",
              "match": "(?<=story)(\\s+)(.*)(?=\\s*{)"
            },
            {
              "name": "invalid",
              "match": "howdy"
            },
            {
              "name": "keyword",
              "begin": "^\\s*frame\\b",
              "end": "}",
              "patterns": [
                {
                  "include": "#frame_block"
                }
              ]
            }
          ]
        }
      ]
    },
    "frame_block": {
      "patterns": [
        {
          "name": "entity.other.attribute-name",
          "begin": "(?<=frame)(\\s+)(.*)(?=\\s*{)",
          "end": "}",
          "patterns": [
            {
              "include": "#frame_properties"
            }
          ]
        }
      ]
    },
    "frame_component": {
      "patterns": [
        
      ]
    },
    "frame_properties": {
      "patterns": [
        {
          "name": "variable.parameter",
          "match": "\\b[a-zA-Z][a-zA-Z0-9_-]*[a-zA-Z0-9](?=\\s*:)"
        },
        {
          "name": "punctuation",
          "match": ":"
        },
        {
          "include": "#style_values"
        },
        {
          "include": "#frame_block"
        }
      ]
    },

    "style_properties": {
      "patterns": [
        {
          "name": "support.type.property-name.css",
          "match": "(width|height|font-size|padding|margin)"
        }
      ]
    },
    "style_values": {
      "patterns": [
        {
          "name": "meta.property-value",
          "match": "(?<=: +)\\$[a-zA-Z_][a-zA-Z0-9_-]*"
        },
        {
          "name": "string.unquoted.other",
          "comment": "absolute path for an asset file",
          "match": "/[\\w\\s\\.-]+(/[\\w\\s\\.-]+)*"
        },
        {
          "name": "constant.numeric",
          "comment": "any dimension",
          "match": "\\d+(\\.\\d+)?(px|em|rem|%|vw|vh|vmin|vmax|cm|mm|in|pt|pc)"
        },
        {
          "name": "constant.numeric",
          "comment": "hex colors",
          "match": "#[0-9a-fA-F]{3,4}([0-9a-fA-F]{2}){0,2}"
        },
        {
          "name": "constant.numeric",
          "comment": "rgb colors",
          "match": "rgb\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}\\s*,\\s*\\d{1,3}\\s*\\)|rgba\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}\\s*,\\s*\\d{1,3}\\s*,\\s*(?:1|0(?:\\.\\d+)?)\\s*\\)"
        },
        {
          "name": "constant.numeric",
          "match": "hsla?\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%\\s*,\\s*\\d{1,3}%\\s*(,\\s*(?:\\d+(?:\\.\\d+)?|\\.\\d+)(%?)\\s*)?\\)"
        },        
        {
          "name": "keyword.operator",
          "comment": "catch-all for text",
          "match": "(?<=toggle\\s+[a-zA-Z][a-zA-Z0-9_-]*[a-zA-Z0-9]\\s*:\\s*)(on|off)"
        },
        {
          "name": "string.quoted.double",
          "comment": "catch-all for text",
          "match": "(?<=text\\s+[a-zA-Z][a-zA-Z0-9_-]*[a-zA-Z0-9]\\s*:\\s*).+$"
        }
      ]
    }
  }
}